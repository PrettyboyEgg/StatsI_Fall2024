expend <- read.table("https://raw.githubusercontent.com/ASDS-TCD/StatsI_Fall2024/main/datasets/expenditure.txt", header=TRUE)
expend
head(expend)
type(expend)
typeof(expend)
rm(ls)
ls
ls()
rm(ls())
View(expend)
x = c(1:4)
y = c(5:8)
list1 = [x, y]
str(expend)
outcomes <- data.frame(
class = c("upper", "lower")
not_stopped = c(14, 7)
outcomes <- data.frame(
class = c("upper", "lower"),
not_stopped = c(14, 7),
bribe = c(6, 7),
stopped = c(7, 1)
)
outcomes[2:4]
sum(outcomes[2:4])
sum(outcomes[2:4][1])
sum(outcomes[2:4, 1])
sum(outcomes[1, 2])
sum(outcomes[1, 2:4])
sum(outcomes[, 2:4])
rowSums(oucomes, na.rm = TRUE)
rowSums(outcomes, na.rm = TRUE)
upper = ls()
rm(upper)
rm(ls())
rm(list=ls())
setwd("C:\\Users\\Owen Eglinton\\Documents\\GitHub\\StatsI_Fall2024\\problemSets\\PS02\\template\\myanswers")
upper = 14 + 6 + 7
lower = 7 + 7 + 1
rm(list=ls())
setwd("C:\\Users\\Owen Eglinton\\Documents\\GitHub\\StatsI_Fall2024\\problemSets\\PS02\\template\\myanswers")
total_u = 14 + 6 + 7 #15
total_l = 7 + 7 + 1 #27
total = total_u + total_l
exp_u = total_u/total
exp_l = total_l/total
data_1 = c(14, 6, 7, 7, 7, 1)
#First we find the total in each treatment group, and overall
total_u = data_1[1:3] #15
total_l = data_1[4:6] #27
total = total_u + total_l #42
#Then we divide each by the total tested to get the expected proportion in each class
exp_u = total_u/total #~0.64
exp_l = total_l/total #~0.36
data_1 = c(14, 6, 7, 7, 7, 1)
#First we find the total in each treatment group, and overall
total_u = sum(data_1[1:3]) #15
total_l = sum(data_1[4:6]) #27
total = total_u + total_l #42
#Then we divide each by the total tested to get the expected proportion in each class
exp_u = total_u/total #~0.64
exp_l = total_l/total #~0.36
rm(list=ls())
data_1 = list(c(14, 6, 7), c(7, 7, 1))
View(data_1)
data_1
total_u = sum(data_1[1]) #15
total_u = sum(data_1[[1]]) #15
total_l = sum(data_1[[2]]) #27
rm(list=ls())
data_1 <- list(c(14, 6, 7), c(7, 7, 1))
total <- sum(data_1)
total <- sum(data_1[[1:2]])
total <- sum(data_1[1:2])
data_1[[1:2]]
View(data_1)
View(data_1)
data_1[[1]]
data_1[[1, 2]]
data_1[1, 2]
sum(data_1)
data_1[[1:2]]
data_1[1:2]
total <- sum(data_1[1:2])
data_1[[1:2]]
data_1[1:2][j]
data_1[1:2][2]
data_1[,2]
data_1[1:2,2]
data_1[1,]
data_1[[1,]]
data_1[[,2]]
data_1[[1,2]]
data_1[[c(1, 2)]]
data_1[[c(, 2)]]
data_1 <- matrix(c(14, 6, 7), c(7, 7, 1))
data_1 <- matrix(c(14, 6, 7, 7, 7, 1), nrow = 2)
View(data_1)
View(data_1)
data_1[[, 2]]
data_1[, 2]
total <- sum(data_1)
for i in (1:3) {
for i in (1:3) {
for (i in 1:3) {
for (j in 1:2) {
x <- sum(data_1[i,])*sum(data_1[,j])/total
y <- c(y, x)
}
}
exp <- matrix(c(1:6), nrow = 2)
for (i in 1:3) {
for (j in 1:2) {
exp[i, j] <- sum(data_1[i,])*sum(data_1[,j])/total
}
}
View(exp)
View(exp)
sum(exp)
data_1[i,]
data_1[1,]
sum(data_1[1,])
sum(data_1[2,])
data_1[,2]
exp <- matrix(c(1:6), nrow = 2)
for (i in 1:2) {
for (j in 1:3) {
exp[i, j] <- sum(data_1[i,])*sum(data_1[,j])/total
}
}
sum(exp)
View(exp)
View(exp)
View(data_1)
View(data_1)
data_1 <- matrix(c(14, 6, 7, 7, 7, 1), ncol = 3)
data_1 <- matrix(c(14, 6, 7, 7, 7, 1), ncol = 3)
data_1 <- matrix(c(14, 6, 7, 7, 7, 1), ncol = 3)
View(data_1)
View(data_1)
data_1 <- matrix(c(14, 7, 6, 7, 7, 1), ncol = 3)
rm(list=ls())
data_1 <- matrix(c(14, 7, 6, 7, 7, 1), ncol = 3)
total <- sum(data_1)
exp <- matrix(c(1:6), nrow = 2)
for (i in 1:2) {
for (j in 1:3) {
exp[i, j] <- sum(data_1[i,])*sum(data_1[,j])/total
}
}
View(exp)
View(exp)
diff <- data_1 - exp
chi2 <- sum(diff^2/exp)
rm(list=ls())
data_1 <- matrix(c(14, 7, 6, 7, 7, 1), ncol = 3)
total <- sum(data_1)
exp <- matrix(c(1:6), nrow = 2)
exp[i, j] <- sum(data_1[i,])*sum(data_1[,j])/total
for (i in 1:2) {
for (j in 1:3) {
exp[i, j] <- sum(data_1[i,])*sum(data_1[,j])/total
}
}
diff <- data_1 - exp
chi2 <- sum(diff^2/exp)
chisq.test(data_1)
help(chisq)
??chisq
dchisq(chi2)
dchisq(chi2, 2)
pchisq(chi2, 2)
pchisq(chi2, 2, lower.tail = FALSE)
nrows(data_1)
rows(data_1)
nrow(data_1)
df_1 <- (nrow(data_1)-1)*(ncol(data_1)-1)
pchisq(chi2, df_1, lower.tail = FALSE)
std_res <- matrix(c(1:6), nrow=2)
for (i in 1:2) {
for (j in 1:3) {
std_res[i, j] <- (data_1[i, j] - exp[i, j])/sqrt(exp[i, j]*(1-sum(data_1[i,])/total)*(1-sum(data_1[,j])/total))
}
}
View(std_res)
for (i in 1:2) {
for (j in 1:3) {
std_res[i, j] <- diff[i, j]/sqrt(exp[i, j]*(1-sum(data_1[i,])/total)*(1-sum(data_1[,j])/total))
}
}
data_2 <- read.table("https://raw.githubusercontent.com/kosukeimai/qss/master/PREDICTION/women.csv")
data_2 <- read.table("https://raw.githubusercontent.com/kosukeimai/qss/master/PREDICTION/women.csv", header=TRUE)
data_2 <- read.csv("https://raw.githubusercontent.com/kosukeimai/qss/master/PREDICTION/women.csv", header=TRUE)
View(data_2)
View(data_2)
reg??
data_2 <- read.csv("https://raw.githubusercontent.com/kosukeimai/qss/master/PREDICTION/women.csv", header=TRUE)
??reg
??regression
View(data_2)
View(data_2)
lm(reserved~water, data = data_2)
lm(formula = reserved ~ water, data = data_2)
plot(data_2$reserved, data_2$water)
anova.lm(reserved~water, data = data_2)
summary(lm(reserved~water, data = data_2))
pchisq(chi2, df_1, lower.tail = FALSE) #fail to reject
View(std_res)
View(std_res)
View(std_res)
View(std_res)
chisq.test(data_1)$residuals
for (i in 1:2) {
for (j in 1:3) {
std_res[i, j] <- diff[i, j]/sqrt(exp[i, j])
}
}
chisq.test(c(data_1[, 2], data_1[, 3]))
c(data_1[, 2], data_1[, 3])
chisq.test(matrix(c(data_1[, 2], data_1[, 3]), nrow=2))
stargazer(lm(reserved~water, data = data_2))
summary(lm(reserved~water, data = data_2))
summary(lm(water~reserved, data = data_2))
